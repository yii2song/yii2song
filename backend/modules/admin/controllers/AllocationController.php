<?php
/**
 * Created by PhpStorm.
 * User: A104
 * Date: 2015/12/23
 * Time: 14:35
 */
namespace backend\modules\admin\controllers;

use backend\models\Admin;
use backend\modules\admin\models\AllocationSearch;
use backend\modules\admin\models\BackendUser;
use backend\modules\basedata\models\BackendUserSearch;
use yii\web\NotFoundHttpException;

class AllocationController extends \yii\web\Controller
{
    public $userClassName;
    public $idField = 'id';
    public $usernameField = 'username';
    public $searchClass;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        if($this->userClassName === null){
            $this->userClassName = \Yii::$app->getUser()->identityClass;
            $this->userClassName = $this->userClassName ? : 'common\models\User';
        }
    }

    public function actionIndex()
    {
        if ($this->searchClass === null) {
            $searchModel = new AllocationSearch();
        } else {
            $class = $this->searchClass;
            $searchModel = new $class;
        }

        $dataProvider = $searchModel->search(\Yii::$app->request->queryParams, $this->userClassName, $this->usernameField);

        $model = BackendUser::find()->all();

        return $this->render('index', [
            'searchModel'  => $searchModel,
            'dataProvider' => $dataProvider,
            'idField' => $this->idField,
            'usernameField' => $this->usernameField,
            'model'        => $model
        ]);

    }

    public function actionView($id)
    {

        $models = new BackendUser();

        $backend_user = BackendUser::find()->where(['user_id'=>$id])->one();

        if (\Yii::$app->request->post() ) {
            $params = \Yii::$app->request->post();


            if(BackendUser::findOne($params['User']['id'])){
                $columns = ['role_id' => $params['User']['role']];
                $condition = 'user_id='.(int)$params['User']['id'];
                \Yii::$app->db->createCommand()->update(BackendUser::tableName(), $columns, $condition)->execute();
            }else{
                $models->user_id = $params['User']['id'];
                $models->role_id = $params['User']['role'];

                $transaction = \Yii::$app->db->beginTransaction();
                try {
                    $models->save();

                    $columns = [
                        'user_id' => $id,
                        'reg_ip' =>\Yii::$app->request->getUserIP(),
                        'last_login_ip' => \Yii::$app->request->getUserIP(),
                        'last_login_time' => time(),
                        'login_times' => 0,
                    ];

                    \Yii::$app->db->createCommand()->insert(Admin::tableName(),$columns)->execute();
                    $transaction->commit();
                } catch (Exception $e) {

                    \Yii::$app->getSession()->setFlash('error','保存失败');
                    $transaction->rollBack();
                }
            }

            \Yii::$app->getSession()->setFlash('success','保存成功');
            return $this->redirect(['backend-user/index']);
        }else{
            $model = $this->findModel($id);

            /* 查找被选中状态 */
            if($backend_user)
                $model->role = $backend_user->role_id;

            return $this->render('view', [
                'model' => $model,
                'idField' => $this->idField,
                'usernameField' => $this->usernameField,
            ]);
        }


    }

    protected function findModel($id)
    {
        $class = $this->userClassName;
        if (($model = $class::findIdentity($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }

}